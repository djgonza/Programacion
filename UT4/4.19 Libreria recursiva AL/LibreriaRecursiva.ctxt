#BlueJ class context
comment0.params=n
comment0.target=int\ factorial(int)
comment0.text=\r\n\ Calcula\ y\ devuelve\ el\ factorial\r\n\ de\ n\r\n
comment1.params=n
comment1.target=int\ sumatorio(int)
comment1.text=\r\n\ Calcula\ y\ devuelve\ el\ sumatorio\r\n\ de\ n\ \ \ \ (ej.\ si\ n\ \=\ 7\ entonces\ 7\ +\ 6\ +\ 5\ +\ 4\ +\ 3\ +\ 2\ +\ 1)\r\n
comment10.params=n
comment10.target=int\ fibonnaci(int)
comment10.text=\r\n\ Calcula\ y\ devuelve\ el\ n-simo\ t\u00E9rmino\r\n\ de\ la\ serie\ de\ Fibonacci\ \ 0\ \ \ 1\ \ \ 1\ \ \ 2\ \ \ \ 3\ \ \ \ 5\ \ \ 8\ \ \ 13\ \ \ 21\ .....\r\n
comment11.params=n
comment11.target=int\ contarDigitosPares(int)
comment11.text=\r\n\ Cuenta\ los\ d\u00EDgitos\ pares\ de\ n\r\n
comment12.params=n\ d
comment12.target=int\ contarApariciones(int,\ int)
comment12.text=\r\n\ Cuenta\ las\ apariciones\ de\ d\ en\ el\r\n\ n\u00FAmero\ n\r\n
comment13.params=a\ b
comment13.target=int\ producto(int,\ int)
comment13.text=\r\n\ \ Multiplicar\ a\ *\ b\ mediante\ sumas\r\n\r\n\ \r\n
comment14.params=a\ b
comment14.target=int\ sumar(int,\ int)
comment14.text=\r\n\ \ Sumar\ a\ +\ b\r\n\r\n\ \r\n
comment15.params=desde\ hasta
comment15.target=int\ sumarIntervalo(int,\ int)
comment15.text=\r\n\ \r\n\ Sumar\ un\ intervalo,\ por\ ejemplo,\ sumar(5,\ 9)\ es\ 5\ +\ 6\ +\ 7\ +\ 8\ +\ 9\ \=\ 35\r\n\ \ Asumimos\ desde\ <\=\ hasta\ \r\n
comment16.params=n
comment16.target=long\ multiplicarPares(int)
comment16.text=\r\n\ \ calcula\ y\ devuelve\ el\ producto\ de\ los\ n\ primeros\ pares\ \r\n\ \ (2\ *\ 4\ *\ 6\ *\ 8\ *\ ....)\r\n
comment17.params=n
comment17.target=void\ printEnBinario(int)
comment17.text=\r\n\ \ muestra\ cada\ uno\ de\ los\ d\u00EDgitos\ binarios\ de\ n\ \r\n\ \ (Si\ n\ \=\ 13\ entonces\ 1101,\ si\ n\ \=\ 9\ entonces\ 101,\ ...)\r\n
comment18.params=n
comment18.target=void\ secuencia01(int)
comment18.text=\r\n\ \ muestra\ la\ secuencia\ 1,\ \ 2,\ \ \ \ 3,\ \ \ 4,\ \ \ 5\r\n
comment19.params=n
comment19.target=void\ secuencia02(int)
comment19.text=\r\n\ \ muestra\ la\ secuencia\ 5,\ \ 4,\ \ \ 3,\ \ \ 2,\ \ \ 1\r\n
comment2.params=a\ b
comment2.target=int\ mcd(int,\ int)
comment2.text=\r\n\ Calcula\ y\ devuelve\ el\ mcd\r\n\ de\ a\ y\ b\ utilizando\ el\ algoritmo\r\n\ de\ Euclides.\ Si\ el\ resto\ de\ a\ entre\ b\ es\ 0\ el\ mcd\ es\ b\r\n\ sino\ el\ mcd\ se\ calcula\ con\ b\ como\ nuevo\ dividendo\ \ y\ divisor\ el\ resto\r\n
comment20.params=n
comment20.target=int\ generarNumero(int)
comment20.text=\r\n\ \ genera\ un\ n\u00BA\ con\ tantas\ cifras\ como\ indique\ n,\ \r\n\ \ su\ primera\ cifra\ ser\u00E1\ 1,\ la\ segunda\ 2,\ ....\ desde\ el\ 1.\ \r\n\ \ Ej.\ si\ n\ \=\ 5\ entonces\ se\ genera\ 12345,\ si\ n\ \=\ 8\ el\ 12345678,\ ....\r\n
comment21.params=n
comment21.target=int\ aBase2(int)
comment21.text=\r\n\ \ calcula\ y\ devuelve\ un\ n\u00BA\ supuesto\ en\ base\ 10\ a\ base\ 2\ \r\n\ \ (Ej.\ 13\ \=\ 1101,\ 255\ \=\ 11111111,\ 17\ \=\ 10001)\r\n
comment22.params=n
comment22.target=int\ aBase10(int)
comment22.text=\r\n\ \ calcula\ y\ devuelve\ un\ n\u00BA\ supuesto\ en\ base\ 2\ a\ base\ 10\ \r\n
comment23.params=n
comment23.target=void\ imparesPares(int)
comment23.text=\r\n\ \ escribe\ los\ \ n\ primeros\ n\u00BAs\ \ de\ forma\ que\ los\ impares\ se\ muestran\ antes\ \r\n\ \ y\ en\ orden\ decreciente\ y\ los\ pares\ depu\u00E9s\ y\ en\ orden\ creciente.\ \r\n\ \ Por\ ejemplo,\ \ imparesPares(5)\ \ dar\u00EDa\ como\ resultado\ \ 5\ \ 3\ \ 1\ \ 2\ \ 4\ \ y\ \r\n\ \ imparesPares(8)\ \ dar\u00EDa\ \ 7\ \ 5\ \ 3\ \ 1\ \ 2\ \ 4\ \ 6\ \ 8\r\n
comment3.params=base\ expon
comment3.target=int\ potencia(int,\ int)
comment3.text=\r\n\ Calcula\ y\ devuelve\ la\ potencia\r\n\ de\ base\ elevado\ a\ expon\ \r\n
comment4.params=n
comment4.target=int\ contarDigitos(int)
comment4.text=\r\n\ Cuenta\ los\ d\u00EDgitos\ de\ n\r\n
comment5.params=n
comment5.target=int\ sumarDigitos(int)
comment5.text=\r\n\ Calcular\ la\ suma\ de\ los\ digitos\ de\ n\r\n
comment6.params=n
comment6.target=boolean\ tiene7(int)
comment6.text=\r\n\ \ Devuelve\ true\ si\ n\ contiene\ alg\u00FAn\ 7,\ false\ en\ otro\ caso\r\n\r\n
comment7.params=n
comment7.target=double\ serie01(int)
comment7.text=\r\n\ \ 1\ +\ 1/2\ +\ 1/3\ +\ 1/4\ +\ .....\r\n\ \ Calcula\ la\ serie\ anterior\ para\ los\ n\ primeros\ t\u00E9rminos\r\n
comment8.params=n
comment8.target=void\ serieMultiplos3(int)
comment8.text=\r\n\ \ 3\ \ \ 6\ \ \ 12\ \ 15\ \ 18\ \ 21\ \ 24\r\n\ \ Escribe\ los\ n\ primeros\ multiplos\ de\ 3\ de\ forma\ recursiva\r\n
comment9.params=n
comment9.target=void\ serie02(int)
comment9.text=\r\n\ \ 10\ \ 13\ \ 16\ \ 19\r\n\ \ Escribe\ la\ serie\ anterior\ para\ los\ n\ primeros\ t\u00E9rminos\r\n
numComments=24
