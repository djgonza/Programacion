#BlueJ class context
comment0.params=
comment0.target=Ejemplo01()
comment0.text=\r\n\ Constructor\ \ \r\n
comment1.params=array
comment1.target=void\ prueba1(int[])
comment1.text=\r\n\ \ \r\n\r\n
comment10.params=
comment10.target=void\ demoDividir()
comment10.text=\r\n\ M\u00E9todo\ cliente\ del\ m\u00E9todo\ dividir()\r\n\ Captura\ las\ excepciones\ tanto\ verificadas\ como\ no\ verificadas\ que\ se\ pueden\ generar\ al\ ejecutar\r\n\ el\ m\u00E9todo\ anterior\r\n
comment11.params=
comment11.target=void\ a()
comment11.text=\r\n\ Avisa\ de\ que\ lanza\ una\ excepci\u00F3n\ verificada\r\n
comment12.params=
comment12.target=void\ b()
comment12.text=\r\n\ Propaga\ la\ excepci\u00F3n\ que\ lanza\ a()\r\n
comment13.params=
comment13.target=void\ aa()
comment13.text=\r\n\ Avisa\ de\ que\ lanza\ una\ excepci\u00F3n\ no\ verificada\ (aunque\ no\ es\ obligatorio\ avisar\ en\ este\ caso)\r\n
comment14.params=
comment14.target=void\ bb()
comment14.text=\r\n\ Ni\ captura\ ni\ propaga\ la\ excepci\u00F3n\ porque\ es\ no\ verificada\r\n\ En\ este\ caso\ se\ para\ la\ ejecuci\u00F3n\ del\ programa,\ es\ el\ sistema\ el\r\n\ que\ se\ hace\ cargo\ de\ la\ excepci\u00F3n\r\n
comment15.params=
comment15.target=int\ obtenerEdad()
comment15.text=\r\n\ \ EL\ m\u00E9todo\ piede\ una\ edad\ y\ la\ devuelve\ como\ valor\ entero\r\n\ \ \r\n\ \ Se\ capturan\ la\ excepciones\ de\ conversi\u00F3n\ de\ formato\r\n\ \ si\ la\ edad\ es\ negativa\ se\ lanza\ la\ excepci\u00F3n\ personalizada\r\n\ \ EdadNegativaExcepcion.\ Cuando\ hay\ error\ el\ m\u00E9todo\ devuelve\ el\ valor\ 0\r\n\r\n
comment16.params=a\ b
comment16.target=void\ prueba(int,\ int)
comment16.text=\r\n\ \ \r\n
comment17.params=args
comment17.target=void\ main(java.lang.String[])
comment17.text=\r\n\ \ \r\n
comment2.params=
comment2.target=void\ prueba2()
comment2.text=\r\n\ \ \r\n\r\n
comment3.params=a\ b
comment3.target=void\ prueba3(int,\ int)
comment3.text=\r\n\ \r\n
comment4.params=n
comment4.target=void\ metodoLlamadoV1(int)
comment4.text=\r\n\ \ \r\n\ \ M\u00E9todo\ que\ lanza\ una\ excepci\u00F3n\ no\ verificada\ IllegalArgumentException\r\n\ \ \ \r\n\ \ Se\ lanza\ y\ no\ se\ trata\ (las\ no\ verificadas\ \ no\ es\ obligatorio\ tratarlas)\r\n\ \r\n
comment5.params=
comment5.target=void\ metodoLlamanteV1()
comment5.text=\r\n\ \ \r\n\ \ M\u00E9todo\ cliente\ que\ llama\ a\ un\ m\u00E9todo\ que\ lanza\ una\ excecpci\u00F3n\ no\ verificada\r\n\ \r\n
comment6.params=
comment6.target=void\ metodoLlamadoV2()
comment6.text=\r\n\ \ \r\n\ \ M\u00E9todo\ que\ lanza\ una\ excepci\u00F3n\ \ \ verificada\r\n\ \ La\ excepci\u00F3n\ \ \ verificada\ es\ obligatorio\ tratarla\r\n\ \ El\ m\u00E9todo\ avisa\ de\ que\ va\ a\ lanzar\ la\ excepci\u00F3n\r\n\ \r\n
comment7.params=
comment7.target=void\ metodoLlamanteV2()
comment7.text=\r\n\ \ \r\n\ \ M\u00E9todo\ cliente\ que\ llama\ a\ un\ m\u00E9todo\ que\ lanza\ una\ excecpci\u00F3n\ verificada\r\n\ \ La\ captura\ (si\ no\ quiere\ capturarla\ la\ tendr\u00E1\ que\ propagar)\r\n
comment8.params=x\ y
comment8.target=int\ dividir01(int,\ int)
comment8.text=\r\n\ Lanza\ una\ excepci\u00F3n\ no\ verificada\ ArithmeticException,\ no\ la\ trata\ \ \r\n
comment9.params=dividendo\ divisor
comment9.target=int\ dividir(int,\ int)
comment9.text=\r\n\ Lanza\ una\ excepci\u00F3n\ no\ verificada\ IllegalArgumentException\ y\ otra\ propia\ NumeroNaturaException\ \ verificada\ y\ avisa\r\n
numComments=18
