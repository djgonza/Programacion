#BlueJ class context
comment0.params=
comment0.target=ListaNumeros()
comment0.text=\r\n\ Constructor\ \ -\ instancia\ la\ colecci\u00F3n\r\n
comment1.params=numero
comment1.target=void\ add(int)
comment1.text=\r\n\ \ a\u00F1ade\ un\ n\u00FAmero\ a\ la\ colecci\u00F3n\r\n
comment10.params=
comment10.target=void\ mostrarLista()
comment10.text=\r\n\ Muestra\ la\ lista\ en\ pantalla\r\n
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=boolean\ estaVacia()
comment2.text=\r\n\ \ detectar\ si\ la\ lista\ est\u00E1\ vac\u00EDa\r\n
comment3.params=
comment3.target=void\ borrarLista()
comment3.text=\r\n\ borrar\ todos\ los\ elementos\ de\ la\ lista,\ dejadla\ vac\u00EDa\r\n
comment4.params=nombre
comment4.target=void\ salvarEnFicheroDeTexto(java.lang.String)
comment4.text=\r\n\ \ Crea\ un\ fichero\ de\ texto\ \ cuyo\ nombre\ se\r\n\ \ pasa\ como\ argumento\r\n\ \ Para\ crear\ el\ fichero\ recorreremos\ la\ colecci\u00F3n\ y\r\n\ \ guardaremos\ cada\ n\u00BA\ de\ la\ lista\ en\ el\ fichero,\ un\ n\u00BA\ por\ l\u00EDnea\r\n\ \ \r\n\ \ Capturamos\ las\ excepciones\ que\ se\ puedan\ producir\r\n
comment5.params=nombre
comment5.target=void\ leerFicheroDeTexto(java.lang.String)
comment5.text=\r\n\ \ lee\ de\ un\ fichero\ de\ texto\ cuyo\ nombre\ se\ pasa\r\n\ \ como\ argumento\ una\ serie\ de\ n\u00BAs\ enteros\ y\ cada\ n\u00BA\ lo\ guarda\ en\ la\ lista\r\n\ \ Al\ acabar\ se\ cierra\ el\ fichero\r\n\ \ \r\n\ \ \ Usando\ BufferedReader\r\n\ \ \r\n\ \ Capturaremos\ las\ excepciones\ que\ se\ puedan\ producir\ \r\n\ \ incluidas\ las\ de\ conversi\u00F3n\ de\ formato.\ Las\ l\u00EDneas\ con\ errores\ se\ ignoran\r\n\ \ continuando\ la\ ejecuci\u00F3n\ del\ programa\r\n
comment6.params=
comment6.target=void\ leerFicheroDeTextoFileChooser()
comment6.text=\r\n\ \ lee\ de\ un\ fichero\ de\ texto\ que\ elegiremos\ desde\ una\ ventana\ JFileChooser\r\n\ \ una\ serie\ de\ n\u00BAs\ enteros\ y\ cada\ n\u00BA\ lo\ guarda\ en\ la\ lista\r\n\ \ Al\ acabar\ se\ cierra\ el\ fichero\r\n\ \ \r\n\ \ \ Usando\ BufferedReader\r\n\ \ \r\n\ Capturaremos\ las\ excepciones\ que\ se\ puedan\ producir\ \r\n\ \ incluidas\ las\ de\ conversi\u00F3n\ de\ formato.\ Las\ l\u00EDneas\ con\ errores\ se\ ignoran\r\n\ \ continuando\ la\ ejecuci\u00F3n\ del\ programa\r\n
comment7.params=
comment7.target=java.io.File\ obtenerFichero()
comment7.text=\r\n\ \ Devuelve\ un\ objeto\ File\ obtenido\ a\ partir\ de\ una\ ventana\r\n\ \ de\ di\u00E1logo\ JFileChooser\r\n
comment8.params=nombre
comment8.target=void\ leerFicheroDeTextoConScanner(java.lang.String)
comment8.text=\r\n\ \ lee\ de\ un\ fichero\ de\ texto\ cuyo\ nombre\ se\ pasa\r\n\ \ como\ argumento\ una\ serie\ de\ n\u00BAs\ enteros\ y\ cada\ n\u00BA\ lo\ guarda\ en\ la\ lista\r\n\ \ Al\ acabar\ se\ cierra\ el\ fichero\r\n\ \ \r\n\ \ \ Usando\ Scanner\r\n\ \ \r\n\ \ \r\n\ \ Capturaremos\ las\ excepciones\ que\ se\ puedan\ producir\ \r\n\ \ incluidas\ las\ de\ conversi\u00F3n\ de\ formato.\ Las\ l\u00EDneas\ con\ errores\ se\ ignoran\r\n\ \ continuando\ la\ ejecuci\u00F3n\ del\ programa\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\ Representaci\u00F3n\ textual\ de\ la\ colecci\u00F3n\r\n
numComments=12
