#BlueJ class context
comment0.params=
comment0.target=Array2D()
comment0.text=\r\n\ Constructor\ \ \r\n
comment1.params=filas\ columnas
comment1.target=Array2D(int,\ int)
comment1.text=\r\n\ Constructor\ \ -\ crea\ \ un\ array\ de\ 2\ dimensiones\ con\ las\ filas\ y\ columnas\r\n\ indicadas\r\n\ @param\ filas\ \ n\u00BA\ de\ filas\ del\ array\ \r\n\ \ @param\ columnas\ n\u00BA\ de\ columnas\ del\ array\r\n
comment10.params=
comment10.target=int[]\ sumarFilas()
comment10.text=\r\n\ Calcula\ y\ devuelve\ un\ array\ en\ el\ que\ cada\ elemento\ es\ la\ suma\ de\ las\ filas\ de\ matriz\r\n
comment11.params=
comment11.target=int[]\ sumarColumnas()
comment11.text=\r\n\ Calcula\ y\ devuelve\ un\ array\ en\ el\ que\ cada\ elemento\ es\ la\ suma\ de\ las\ columnas\ de\ matriz\r\n
comment12.params=
comment12.target=int\ sumarDiagonalPrincipal()
comment12.text=\r\n\ @return\ calcula\ y\ devuelve\ la\ suma\ de\ la\ diagonal\ principal\ (suponiendo\ la\r\n\ matriz\ cuadrada)\r\n
comment13.params=
comment13.target=int\ sumarDiagonalSecundaria()
comment13.text=\r\n\ @return\ calcula\ y\ devuelve\ la\ suma\ de\ la\ diagonal\ secundaria\ (suponiendo\ la\r\n\ matriz\ cuadrada)\r\n
comment14.params=
comment14.target=int[][]\ traspuesta()
comment14.text=\r\n\ \ \ 1\ \ 22\ \ 3\ \ \ 44\r\n\ \ \ 3\ \ 7\ \ \ 5\ \ \ 11\r\n\ \ \ 4\ \ 5\ \ \ 6\ \ \ 9\r\n\ \ \ La\ traspuesta\ es\r\n\ \ \ 1\ \ \ 3\ \ \ 4\r\n\ \ \ 22\ \ 7\ \ \ 5\r\n\ \ \ 3\ \ \ 5\ \ \ 6\r\n\ \ \ 44\ \ 11\ \ \ 9\r\n
comment15.params=
comment15.target=int\ columnaSumaMaxima()
comment15.text=\r\n\ Calcula\ y\ devuelve\ la\ posici\u00F3n\ de\ la\ columna\ con\ suma\ m\u00E1xima\r\n\ Puedes\ ayudarte\ del\ m\u00E9todo\ sumarColumna()\r\n
comment16.params=
comment16.target=void\ intercambiar()
comment16.text=\r\n\ Intercambia\ la\ columna\ de\ suma\ m\u00E1xima\ con\ la\ primera\ columna\r\n\ Si\ son\ la\ misma\ no\ hace\ falta\ el\ intercambio\r\n
comment17.params=args
comment17.target=void\ main(java.lang.String[])
comment17.text=\r\n\ \ \r\n
comment2.params=
comment2.target=void\ inicializar()
comment2.text=\r\n\ \ Inicializa\ la\ matriz\ con\ valores\ aleatorios\ entre\ 3\ y\ 30\ inclusive\r\n\ Usa\ el\ mutador\ setValor\r\n
comment3.params=
comment3.target=int\ getFilas()
comment3.text=\r\n\ @return\ el\ n\u00BA\ total\ de\ filas\ de\ la\ matriz\ \r\n
comment4.params=
comment4.target=int\ getColumnas()
comment4.text=\r\n\ @return\ el\ n\u00BA\ total\ de\ columnas\ de\ la\ matriz\ \r\n
comment5.params=f\ c\ valor
comment5.target=void\ setValor(int,\ int,\ int)
comment5.text=\r\n\ \ deja\ un\ valor\ en\ la\ fila\ y\ columna\ indicadas\ como\ par\u00E1metro\r\n\ \ asumimos\ f\ y\ c\ correctos\r\n\r\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\r\n\ \ Representaci\u00F3n\ textual\ de\ la\ matriz\r\n\r\n
comment7.params=
comment7.target=void\ escribir()
comment7.text=\r\n\ \ \r\n\ Escribir\ la\ matriz\ bidimensional\ en\ pantalla\r\n
comment8.params=f
comment8.target=int\ sumarFila(int)
comment8.text=\r\n\ @param\ f\ la\ fila\ cuyos\ valores\ hay\ que\ sumar\r\n\ \ \ \ \ \ \ \ \ \ suponemos\ f\ correcto\r\n
comment9.params=c
comment9.target=int\ sumarColumna(int)
comment9.text=\r\n\ @param\ c\ la\ columna\ cuyos\ valores\ hay\ que\ sumar\r\n\ \ \ \ \ \ \ \ \ \ suponemos\ c\ correcto\r\n
numComments=18
