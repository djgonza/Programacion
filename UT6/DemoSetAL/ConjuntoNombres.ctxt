#BlueJ class context
comment0.params=
comment0.target=ConjuntoNombres()
comment0.text=\r\n\ Constructor\ \ \r\n
comment1.params=nombre
comment1.target=void\ addNombre(java.lang.String)
comment1.text=\r\n\ A\u00F1ade\ un\ nombre\ al\ conjunto\r\n
comment2.params=nombre
comment2.target=void\ borrarNombre(java.lang.String)
comment2.text=\r\n\ Borrar\ un\ nombre\ al\ conjunto\r\n
comment3.params=nombre
comment3.target=boolean\ estaNombre(java.lang.String)
comment3.text=\r\n\ \ Devuelve\ true\ si\ el\ conjunto\ contiene\ a\ nombre\r\n\r\n
comment4.params=
comment4.target=int\ totalNombres()
comment4.text=\r\n\ \ \r\n\ N\u00BA\ de\ nombres\ (elementos\ del\ conjunto)\r\n
comment5.params=otro
comment5.target=java.util.LinkedHashSet\ union(java.util.LinkedHashSet)
comment5.text=\r\n\ \ Obtiene\ un\ nuevo\ conjunto\ de\ nombres,\ la\ uni\u00F3n\r\n\ \ del\ atributo\ nombres\ y\ del\ par\u00E1metro\ otro\r\n\ \ (el\ conjunto\ original\ nombres\ no\ se\ modifica)\r\n\r\n
comment6.params=otro
comment6.target=java.util.LinkedHashSet\ interseccion(java.util.LinkedHashSet)
comment6.text=\r\n\ \ Obtiene\ un\ nuevo\ conjunto\ de\ nombres,\ la\ intersecci\u00F3n\ (los\ nombres\ comunes)\r\n\ \ del\ atributo\ nombres\ y\ del\ par\u00E1metro\ otro\r\n\ \ (el\ conjunto\ original\ nombres\ no\ se\ modifica)\r\n\r\n
comment7.params=otro
comment7.target=java.util.LinkedHashSet\ diferencia(java.util.LinkedHashSet)
comment7.text=\r\n\ \ Obtiene\ un\ nuevo\ conjunto\ de\ nombres,\ la\ diferencia\ \ \r\n\ \ del\ conjunto\ nombres\ y\ del\ conjunto\ \ otro\ \r\n\ \ (el\ conjunto\ original\ nombres\ no\ se\ modifica)\r\n\r\n
comment8.params=
comment8.target=void\ escribirConjunto()
comment8.text=\r\n\ Mostrar\ todos\ los\ nombres\ con\ iterador\r\n
comment9.params=
comment9.target=void\ escribirConjuntoConFor()
comment9.text=\r\n\ Mostrar\ todos\ los\ nombres\ con\ for\ mejorado\r\n
numComments=10
